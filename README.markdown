#Rxdata Versioning Utility
###Version: 1.0.4

##By: Raku (rakudayo@gmail.com)

####**Introduction**

Have you ever wanted to work on an RMXP game with a group of friends, but ran into trouble with conflicts when multiple people edit the same rxdata files? If you want to safely and efficiently version the data in your RMXP game, then read on!

I have written a series of Ruby scripts to export all of the RMXP rxdata files (scripts, system data, maps, etc.) into plain-text files which are human-readable and can be easily versioned with a versioning system such as Subversion or Mercurial. I've also written scripts which can read these exported text files and import them back into rxdata files so that RMXP can read them. Now, anytime two people change a map, a script, or any other game data, all of the conflicts can be easily resolved in plain text.

I've been careful to make sure that the RGSS objects are always exported in the same way, so that unnecessary conflicts are avoided. The data files are exported as YAML files and the RGSS scripts are exported as normal Ruby files. This provides other benefits beyond just versioning the data. For example, you could use your favorite text editor outside of RMXP to edit your scripts; just make sure you don't export the scripts before you import your changes. Also, seeing what changed in the YAML files when you do something in RMXP is really helpful in understanding how the game data works!

This is my first script that I've posted here on the forums. Hopefully it's useful! Please give me suggestions or comments if you have any ideas how I could improve this utility.


####**Features**

* Exports rxdata files (except Scripts.rxdata) to text files in the YAML data format.
* Exports all scripts contained in Scripts.rxdata to individual Ruby files.
* Imports YAML files back into rxdata files that RMXP can read.
* Imports Ruby scripts previously exported back into a Scripts.rxdata file that RMXP can read.
* Automatic importing/exporting via Game.bat which can import all scripts and run RMXP. When RMXP is closed, all data is exported.
* Utility behavior is configurable via a config.yaml file.
* Only exports rxdata files if they need to be exported (i.e. have been modified since RMXP was opened or haven't been exported yet).
* Only exports scripts if they are not empty (for example, place-holder scripts)
* Cleanup script (called clean.rb) provided to help identify stale scripts (i.e. scripts which are added in RMXP's script editor, exported, and then later removed from the script editor, but still remain in your scripts directory).


####**Downloads**

A demo project (old version of code) showing utility usage and Subversion (Just run Game.bat, instead of Game.rxproj NOTE: SVN metadata not included in the project).

[Rxdata Versioning Utility Demo (v1.0.2)](https://docs.google.com/leaf?id=0B3Y-YsSmakHrMmEwMzhhMGUtMWRkNy00NzBiLTlhM2QtZDRkNDk2ZmY4NWZm&sort=name&layout=list&num=50)


####**Sample Files**

A sample YAML file exported from System.rxdata.

[Sample exported YAML file](https://gist.github.com/1289747)

A sample export digest. This file is generated by the RGSS script exporter and is a list of all exported scripts. It is used so they can be re-imported into Scripts.rxdata in the original order later. Notice that the third column (exported Ruby file name) for the second entry is EMPTY. No file is actually exported, since that script in RMXP was actually an empty entry.

[Sample script export digest](https://gist.github.com/1289755)

A sample config file for the utility.

[Sample config file](https://gist.github.com/1289767)

The default Game.bat file used to launch RMXP (instead of Game.exe).

[Sample Game.bat file](https://gist.github.com/1289779)

Sample Game.bat output (verbose mode)

[Sample output for Game.bat](https://gist.github.com/1289787)


####**Instructions**
_Requirements_

* Ruby Interpreter - Get the most recent version here. It is required to run the utility scripts outside of RMXP. You will need a version with the YAML and Zlib modules (the latest version should have these).
* RPG Maker XP - Obviously! :)
* Windows XP - Not sure if this utility works on Windows Vista. The only problem I forsee could be the batch file commands. Since I don't have access to a Vista machine, could someone confirm this?
* (Optional) Versioning System - If you want to keep track of versions of your exported data, you will need a versioning system like SVN, Mercurial, or Github.

_Setup_

* Download the RMXP Data Exporter/Importer Utility above.
* Back up your project (just copy it somewhere for safe-keeping). :)
* Extract the archive into your RMXP project directory. NOTE: If you already have a Utility directory in the base directory of your RMXP project, you may want to extract to a temporary directory and change the name of the Utility directory to something else. Just make sure to update the SCRIPTS_DIR environment variable set in Game.bat (see above).
* Optional: Modify any configuration parameters you want, in the config.yaml file, such as output directory paths for the YAML and Ruby files.

_Usage_
Automated (recommended)

* Just run Game.bat.
* Kick back, relax, and let the batch file do everything for you. NOTE: It will ignore importing the first time it is run, since no data has been exported yet. When you close RMXP, all of the data will be exported (as long as you don't close the command window that Game.bat opened). :)

Manual

* Open a command prompt
* Change to the scripts directory (default name is Utility).
* > ruby script_importer.rb
* > ruby data_importer.rb
* > ruby logtime.rb (This is to log the time we started RMXP to determine if files were modified)
* Open RPG Maker XP
* Close RPG Maker XP
* > ruby data_exporter.rb
* > ruby script_exporter.rb

_What to Version_

* The exported data YAML files
* The exported Ruby scripts
* The script export digest (digest.txt)
* All RMXP Exporter/Importer Utility scripts (so that everyone sharing your project has them)
* Game.bat (if you are using it - I highly recommend to use it, since it is easy to forget to import or export)


####**FAQ**

* Does this utility work for RMVX? No, it needs to be modified to work with RMVX. I only own RMXP, but if anyone wants to modify it, feel free to fork me and make your changes.
* What versioning system does this utility work with? Theoretically, all of them. Exported files should be version-able by any versioning system that can version UTF8-encoded text files, which I think is all of them. I've tested this versioning two different RMXP projects with Subversion with no problems.
* When versioning the exported files, why do I get conflicts when there is no change in the files? Probably this is due to editing the exported file in a text editor or diff program which modified the newlines in the file. Try telling your versioning system to ignore new line differences or always convert them automatically.
* Why are my changes not exported after I close RMXP? If you ran the Game.bat file, you may want to check that you have not accidentally closed the command window that says, "DO NOT CLOSE THIS COMMAND WINDOW!!!". The export step should automatically execute from the batch script when you close RMXP. If you're manually running the scripts, then just run the export script (see Usage).


####**Compatibility**

I'm unsure of compatibility with SDK.
This utility should be compatible with any script modifications, since it runs outside of RMXP and treats scripts as data. However, you may experience problems if you have directly modified any of the classes in the RPG module. In general, one should not directly modify these classes, but in case you have, I've included a Ruby file for RGSS modifications (the default location is /Utility/rmxp/rgss_mod.rb). You will need to add your changes to that file so that they can be automatically picked up by the importer/exporter scripts.


####**Credits and Thanks**

* vgvgf: I modified his Table, Color, and Tone class implementations in Ruby.
* Yeyinde: His forum topic here helped me figured out how to load the compressed scripts from the Scripts.rxdata file.


####**Author's Notes**

* This is the final release of the Rxdata Versioning Utility. I have made an RMXP Plugin System which covers the functionality of this utility, plus much more. I'll post it on the forums shortly.
* THIS UTILITY MODIFIES YOUR PROJECT'S .rxdata FILES! Make sure to back them up before using it.
* If anyone can help me test this utility out on more RMXP projects, I would really appreciate it!
* Since I don't have access to a Vista machine, could someone confirm if this utility works on Vista?
* If you need Ruby implementations of the Table, Color, and Tone classes that can load and dump the .rxdata files that RMXP can read, they are included in the utility in rgss_internal.rb, or you can email me and I'll send them to you. :)


####**Terms and Conditions**

This utility is free for any use, commercial or otherwise.